openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/a010553062/Acit3855_Lab1/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/adiulay/Baggage-Handling/1.0.0
info:
  description: This API receives users reading habits and provides reccomendations to users/publishers
  version: "1.0.0"
  title: Book Reccomendation API
  contact:
    email: dng76@my.bcit.ca
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: readers
    description: Adding/Rating/Reccomendation of books

paths:
  /readers/adding_book:
    get:
      tags:
        - readers
      summary: gets new reader books
      operationId: app.get_reader_book
      description: Gets book added after a timestamp
      parameters:
        - name: timestamp
          in: query
          description: Limits the number of items on a page
          schema:
            type: string
            format: date-time
            example: 2016-08-29T09:12:33
      responses:
        '200':
          description: Successfully returned a list of books added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/book'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
#    post:
#      tags:
#        - readers
#      summary: Adds a book object
#      operationId: app.add_reader_book
#      description: Adds a Book with a rating
#      responses:
#        '201':
#          description: Book with rating added
#        '400':
#          description: 'Invalid book, book ID invalid'
#        '409':
#          description: Book already exists
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/book'
#        description: Adding book


  /readers/user:
    get:
      tags:
        - Bugs
      summary: gets new user
      operationId: app.get_reader_user
      description: Gets users added after a timestamp
      parameters:
        - name: timestamp
          in: query
          description: Limits the number of items on a page
          schema:
            type: string
            format: date-time
            example: 2016-08-29T09:12:33
      responses:
        '200':
          description: Successfully returned a list of readers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reader'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
#    post:
#      tags:
#        - readers
#      summary: Adds a user's rating to a specific book
#      operationId: app.add_reader_user
#      description: Associates a user's rating to a specific book ID
#      responses:
#        '201':
#          description: Book rated successfully
#        '400':
#          description: 'Invalid rating, rating must be int and between 1-10'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/reader'
#        description: Associating user rating with this book
components:
  schemas:
    book:
      type: object
      required:
        - title
        - author
        - publisher
        - genre
        - isbn_10
        - isbn_13
        - reader_rating
        - reader_id
      properties:
        title:
          type: string
          example: Friday the 13th
        author:
          type: string
          example: James Brownly
        publisher:
          type: string
          example: FunHouse Books
        genre:
          type: string
          example: Horror
        isbn_10:
          type: string
          example: "1591142210"
        isbn_13:
          type: string
          example: "978-1591142218"
        reader_rating:
          type: integer
          example: 10
        reader_id:
          type: string
          format: uuid
          example: d1faa51
    reader:
      type: object
      required:
        - name
        - reader_id
      properties:
        name:
          type: string
          example: John Doe
        reader_id:
          type: string
          format: uuid
          example: d1faa51

